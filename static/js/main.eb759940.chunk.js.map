{"version":3,"sources":["images/luke.jpg","images/leia.jpg","images/hanSolo.jpg","images/obiwan.jpg","images/Yoda.png","images/vader.png","images/palpatine.jpeg","images/loadingSpinner.gif","characterList.js","FetchOnRenderExample/mockFetch.js","LoadingSpinner.js","FetchOnRenderExample/Quote.js","FetchOnRenderExample/MainImage.js","FetchOnRenderExample/About.js","FetchOnRenderExample/Character.js","BackToHome.js","FetchOnRenderExample/index.js","FetchThenRenderExample/Quote.js","FetchThenRenderExample/MainImage.js","FetchThenRenderExample/About.js","FetchThenRenderExample/mockFetch.js","FetchThenRenderExample/fetchCharacterData.js","FetchThenRenderExample/Character.js","FetchThenRenderExample/index.js","SuspenseExample/Quote.js","SuspenseExample/MainImage.js","SuspenseExample/About.js","mockFetch.js","fetchCharacterData.js","SuspenseExample/Name.js","SuspenseExample/Character.js","SuspenseExample/index.js","SuspenseListExample/Quote.js","SuspenseListExample/MainImage.js","SuspenseListExample/About.js","SuspenseListExample/Name.js","SuspenseListExample/Character.js","SuspenseListExample/index.js","UseTransitonExample/Quote.js","UseTransitonExample/MainImage.js","UseTransitonExample/About.js","UseTransitonExample/Name.js","UseTransitonExample/Character.js","UseTransitonExample/index.js","Home.js","App.js","index.js"],"names":["module","exports","characterList","id","name","quote","img","luke","about","leia","han","obiwan","yoda","vader","palpatine","mockFetch","type","randomFetchTimeout","Math","random","Promise","resolve","data","find","char","setTimeout","fetchNameById","fetchQuoteById","fetchImageById","fetchAboutById","LoadingSpinner","alt","className","src","loadingSpinner","Quote","props","characterId","useState","setQuote","loading","setLoading","useEffect","a","async","newQuote","updateQuote","MainImage","image","setImage","newImage","updateImage","About","setAbout","newAbout","updateAbout","Character","setName","newName","updateName","BackToHome","to","process","App","characterIds","map","randomCharacterId","floor","length","fetchCharacterData","fetchPromises","all","setData","newData","updateData","resource","read","wrapPromise","promise","result","status","suspender","then","r","e","namePromise","quotePromise","imagePromise","aboutPromise","Name","fallback","key","tail","revealOrder","buttonText","getNextCharacter","isPending","disabled","onClick","randomCharacterIdIndex","setCharacterId","setResource","useTransition","timeoutMs","startTransition","newIds","filter","randomId","Home","path","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.eb759940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/luke.7062f8ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leia.14e6dd5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hanSolo.e9f93d51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obiwan.6576a96a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Yoda.497b8e02.png\";","module.exports = __webpack_public_path__ + \"static/media/vader.1dcacb03.png\";","module.exports = __webpack_public_path__ + \"static/media/palpatine.32fb73ae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/loadingSpinner.be0d9fd5.gif\";","import luke from './images/luke.jpg';\nimport leia from './images/leia.jpg';\nimport han from './images/hanSolo.jpg';\nimport obiwan from './images/obiwan.jpg';\nimport yoda from './images/Yoda.png';\nimport vader from './images/vader.png';\nimport palpatine from './images/palpatine.jpeg';\n\nconst characterList = [\n  {\n    id: 0,\n    name: 'Luke Skywalker',\n    quote: \"I'm Luke Skywalker. I'm here to rescue you.\",\n    img: luke,\n    about: 'Luke Skywalker is the son of Jedi Knight Anakin Skywalker and Senator '\n      + 'of Naboo, Padmé Amidala. He is taken in by his uncle and aunt, Owen and Beru '\n      + \"Lars, after the death of Padmé and Anakin's fall to the dark side. He is \"\n      + 'Force-sensitive and skilled with a lightsaber.'\n  },\n  {\n    id: 1,\n    name: 'Leia Organa',\n    quote: \"Help me, Obi-Wan Kenobi. You're my only hope.\",\n    img: leia,\n    about: 'Leia Organa, a Force-sensitive human female, was a princess of Alderaan, '\n      + 'a member of the Imperial Senate, a leader of the Alliance to Restore the '\n      + 'Republic, a member of the Galactic Senate, and general of the Resistance.'\n  },\n  {\n    id: 2,\n    name: 'Han Solo',\n    quote: 'You know, sometimes I amaze even myself.',\n    img: han,\n    about: 'Han Solo was a human male smuggler who became a leader in the Alliance to '\n      + 'to Restore the Republic and an instrumental figure in the defeat of the '\n      + 'Galactic Empire during the Galactic Civil War. He hailed from Corellia and '\n      + 'became a smuggler in the employ of Jabba the Hutt, even completing the '\n      + 'Kessel Run in just twelve parsecs with his prized ship, the Millennium '\n      + 'Falcon.',\n  },\n  {\n    id: 3,\n    name: 'Obi-Wan Kenobi',\n    quote: 'If you strike me down, I shall become more powerful than you can possibly imagine.',\n    img: obiwan,\n    about: 'Obi-Wan Kenobi was a Force-sensitive human male and a legendary Jedi '\n      + 'Master and member of the Jedi High Council during the Fall of the Republic. '\n      + 'During the Age of the Empire, he went by the alias of Ben Kenobi in order to '\n      + 'hide from the regime that drove the Jedi to near extinction in the aftermath '\n      + 'of the Clone Wars.',\n  },\n  {\n    id: 4,\n    name: 'Yoda',\n    quote: 'Judge me by my size, do you?',\n    img: yoda,\n    about: 'Yoda, a Force-sensitive male being belonging to a mysterious species, '\n      + 'was a legendary Jedi Master who witnessed the rise and fall of the Galactic '\n      + 'Republic, followed by the rise of the Galactic Empire. Small in stature but '\n      + 'revered for his wisdom and power, Yoda trained generations of Jedi, '\n      + 'ultimately serving as the Grand Master of the Jedi Order.'\n  },\n  {\n    id: 5,\n    name: 'Vader',\n    quote: 'I find your lack of faith disturbing.',\n    img: vader,\n    about: 'Once a heroic Jedi Knight, Darth Vader was seduced by the dark side of '\n      + 'the Force, became a Sith Lord, and led the Empire’s eradication of the Jedi '\n      + 'Order. He remained in service of the Emperor -- the evil Darth Sidious -- '\n      + 'for decades, enforcing his Master’s will and seeking to crush the fledgling '\n      + 'Rebel Alliance.'\n  },\n  {\n    id: 6,\n    name: 'Emperor Palpatine',\n    quote: 'Soon the rebellion will be crushed and young Skywalker will be one of us.',\n    img: palpatine,\n    about: 'Emperor Palpatine was a Force-sensitive Human male who served as the last '\n      + 'Supreme Chancellor of the Galactic Republic and the first Emperor of the '\n      + 'Galactic Empire. A Dark Lord of the Sith in the Order of the Sith Lords, '\n      + 'recorded by history as the most successful who had ever lived, his deeds '\n      + 'resulted in overthrow the ancient Republic and the noble Jedi Order from '\n      + 'within.'\n  }\n];\n\nexport default characterList;\n","import characterList from \"../characterList\";\n\nconst mockFetch = (type) => (id) => {\n  const randomFetchTimeout = (Math.random() * 2000) + 1000  // between 1 and 3 seconds\n  return new Promise(resolve => {\n    const data = characterList.find(char => char.id === id)[type];\n    setTimeout(() => {\n      resolve(data);\n    }, randomFetchTimeout);\n  });\n};\n\nexport const fetchNameById = mockFetch('name');\nexport const fetchQuoteById = mockFetch('quote');\nexport const fetchImageById = mockFetch('img');\nexport const fetchAboutById = mockFetch('about');\n\n","import React from 'react';\nimport loadingSpinner from './images/loadingSpinner.gif';\n\nconst LoadingSpinner = () => (\n  <div>\n    <img alt={'loading...'} className=\"loading-spinner\" src={loadingSpinner} />\n  </div>\n);\n\n\nexport default LoadingSpinner;","import React, { useEffect, useState } from 'react';\nimport { fetchQuoteById } from './mockFetch';\nimport LoadingSpinner from '../LoadingSpinner';\n\nconst Quote = props => {\n  const { characterId } = props;\n  const [quote, setQuote] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const updateQuote = async () => {\n      setLoading(true);\n      const newQuote = await fetchQuoteById(characterId);\n      setLoading(false);\n      setQuote(newQuote);\n    };\n    updateQuote();\n  }, [characterId]);\n  if (loading) return <LoadingSpinner />\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n};\n\nexport default Quote;\n","import React, { useEffect, useState } from 'react';\nimport { fetchImageById } from './mockFetch';\nimport LoadingSpinner from '../LoadingSpinner';\n\nconst MainImage = props => {\n  const { characterId } = props;\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const updateImage = async () => {\n      setLoading(true);\n      const newImage = await fetchImageById(characterId);\n      setLoading(false);\n      setImage(newImage);\n    };\n    updateImage();\n  }, [characterId]);\n\n  if (loading) return <LoadingSpinner />\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React, { useEffect, useState } from 'react';\nimport { fetchAboutById } from './mockFetch';\nimport LoadingSpinner from '../LoadingSpinner';\n\nconst About = props => {\n  const { characterId } = props;\n  const [about, setAbout] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const updateAbout = async () => {\n      setLoading(true);\n      const newAbout = await fetchAboutById(characterId);\n      setLoading(false);\n      setAbout(newAbout);\n    };\n    updateAbout();\n  }, [characterId]);\n\n  if (loading) return <LoadingSpinner />\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React, { useEffect, useState } from 'react';\nimport { fetchNameById } from './mockFetch';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\n\nconst Character = props => {\n  const { characterId } = props;\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const updateName = async () => {\n      setLoading(true);\n      const newName = await fetchNameById(characterId);\n      setLoading(false);\n      setName(newName);\n    };\n    updateName();\n  }, [characterId]);\n\n  if (loading) return <LoadingSpinner />\n  return (\n    <div>\n      <h2>{name}</h2>\n      <Quote characterId={characterId} />\n      <MainImage characterId={characterId} />\n      <About characterId={characterId} />\n    </div>\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BackToHome = props => (\n  <div className='back-home'>\n    <Link to={`${process.env.PUBLIC_URL}/`}>\n      {'<<< Back To Home Page'}\n    </Link>\n  </div>\n);\n\n\nexport default BackToHome;\n","import React from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        characterId={randomCharacterId}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ quote }) => (\n  <p>\n    <em>{`\"${quote}\"`}</em>\n  </p>\n);\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { image } = props;\n\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { about } = props;\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import characterList from \"../characterList\";\n\nconst mockFetch = (type) => (id) => {\n  const randomFetchTimeout = (Math.random() * 2000) + 1000  // between 1 and 3 seconds\n  return new Promise(resolve => {\n    const data = characterList.find(char => char.id === id)[type];\n    setTimeout(() => {\n      resolve(data);\n    }, randomFetchTimeout);\n  });\n};\n\nexport const fetchNameById = mockFetch('name');\nexport const fetchQuoteById = mockFetch('quote');\nexport const fetchImageById = mockFetch('img');\nexport const fetchAboutById = mockFetch('about');\n\n","import { fetchNameById, fetchQuoteById, fetchImageById, fetchAboutById } from \"./mockFetch\";\n\nconst fetchCharacterData = async (characterId) => {\n  const fetchPromises = [\n    fetchNameById(characterId),\n    fetchQuoteById(characterId),\n    fetchImageById(characterId),\n    fetchAboutById(characterId),\n  ];\n  const [name, quote, image, about] = await Promise.all(fetchPromises);\n  return { name, quote, image, about };\n}\n\nexport default fetchCharacterData;","import React, { useEffect, useState } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport fetchCharacterData from './fetchCharacterData';\n\nconst Character = props => {\n  const { characterId } = props;\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const updateData = async () => {\n      setLoading(true);\n      const newData = await fetchCharacterData(characterId);\n      setLoading(false);\n      setData(newData);\n    };\n    updateData();\n  }, [characterId]);\n\n  const { name, quote, image, about } = data;\n\n  if (loading) return <LoadingSpinner />\n  return (\n    <div>\n      <h2>{name}</h2>\n      <Quote quote={quote} />\n      <MainImage image={image} />\n      <About about={about} />\n    </div>\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const characterId = characterIds[randomCharacterIdIndex];\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        characterId={characterId}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import characterList from \"./characterList\";\n\nconst mockFetch = (type) => (id) => {\n  const randomFetchTimeout = (Math.random() * 2000) + 1000  // between 1 and 3 seconds\n  return new Promise(resolve => {\n    const data = characterList.find(char => char.id === id)[type];\n    setTimeout(() => {\n      resolve(data);\n    }, randomFetchTimeout);\n  });\n};\n\nexport const fetchNameById = mockFetch('name');\nexport const fetchQuoteById = mockFetch('quote');\nexport const fetchImageById = mockFetch('img');\nexport const fetchAboutById = mockFetch('about');\n\n","import { fetchNameById, fetchQuoteById, fetchImageById, fetchAboutById } from \"./mockFetch\";\n\nconst fetchCharacterData = (characterId) => {\n  const namePromise = fetchNameById(characterId);\n  const quotePromise = fetchQuoteById(characterId);\n  const imagePromise = fetchImageById(characterId);\n  const aboutPromise = fetchAboutById(characterId);\n  return {\n    id: characterId,\n    name: wrapPromise(namePromise),\n    quote: wrapPromise(quotePromise),\n    image: wrapPromise(imagePromise),\n    about: wrapPromise(aboutPromise),\n  };\n};\n\n\n// The React Docs said not to copy and paste this into your code\n// But I copy/pasted anyway\n// It said real implementations can be significantly more complex\n// But my implementation is neither real nor complex, so it's okay\n// Code comes from: https://codesandbox.io/s/frosty-hermann-bztrp\nfunction wrapPromise(promise) {\n  let status = \"pending\";\n  let result;\n  let suspender = promise.then(\n    r => {\n      status = \"success\";\n      result = r;\n    },\n    e => {\n      status = \"error\";\n      result = e;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n};\n\nexport default fetchCharacterData;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Name from './Name';\n\nconst Character = props => {\n  const { characterId } = props;\n  const resource = fetchCharacterData(characterId);\n\n  return (\n    <div>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Name resource={resource} />\n      </Suspense>\n      <Suspense fallback={<LoadingSpinner />}>\n        <Quote resource={resource} />\n      </Suspense>\n      <Suspense fallback={<LoadingSpinner />}>\n        <MainImage resource={resource} />\n      </Suspense>\n      <Suspense fallback={<LoadingSpinner />}>\n        <About resource={resource} />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const characterId = characterIds[randomCharacterIdIndex];\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        characterId={characterId}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense, SuspenseList } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Name from './Name';\n\nconst Character = props => {\n  const { characterId } = props;\n  const resource = fetchCharacterData(characterId);\n\n  return (\n    <div>\n      <SuspenseList key={characterId} tail=\"collapsed\" revealOrder=\"forwards\">\n        <Suspense key={`Name-${characterId}`} fallback={<LoadingSpinner />}>\n          <Name resource={resource} />\n        </Suspense>\n        <Suspense key={`Quote-${characterId}`} fallback={<LoadingSpinner />}>\n          <Quote resource={resource} />\n        </Suspense>\n        <Suspense key={`MainImage-${characterId}`} fallback={<LoadingSpinner />}>\n          <MainImage resource={resource} />\n        </Suspense>\n        <Suspense key={`About-${characterId}`} fallback={<LoadingSpinner />}>\n          <About resource={resource} />\n        </Suspense>\n      </SuspenseList>\n    </div>\n  );\n};\n\nexport default Character;\n","import React from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const characterId = characterIds[randomCharacterIdIndex];\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        characterId={characterId}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst Quote = ({ resource }) => {\n  const quote = resource.quote.read();\n  return (\n    <p>\n      <em>{`\"${quote}\"`}</em>\n    </p>\n  );\n}\n\n\nexport default Quote;\n","import React from 'react';\n\nconst MainImage = props => {\n  const { resource } = props;\n  const image = resource.image.read();\n  return (\n    <img alt=\"Character\" className=\"main-image\" src={image} />\n  );\n};\n\nexport default MainImage;","import React from 'react';\n\nconst About = props => {\n  const { resource } = props;\n  const about = resource.about.read();\n\n  return (\n    <p className=\"about\">{about}</p>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Name = props => {\n  const { resource } = props;\n  const name = resource.name.read();\n\n  return (\n    <h2>{name}</h2>\n  );\n};\n\nexport default Name;","import React, { Suspense } from 'react';\nimport Quote from './Quote';\nimport MainImage from './MainImage';\nimport About from './About';\nimport LoadingSpinner from '../LoadingSpinner';\nimport Name from './Name';\n\nconst Character = ({ buttonText, getNextCharacter, isPending, resource }) => (\n  <Suspense fallback={<LoadingSpinner />}>\n    <Name resource={resource} />\n    <Quote resource={resource} />\n    <MainImage resource={resource} />\n    <About resource={resource} />\n    <button disabled={isPending} onClick={getNextCharacter}>\n      {buttonText}\n    </button>\n  </Suspense>\n);\n\nexport default Character;\n","import React, { useState, useTransition } from 'react';\nimport './index.css';\nimport characterList from '../characterList';\nimport fetchCharacterData from '../fetchCharacterData';\nimport Character from './Character';\nimport BackToHome from '../BackToHome';\n\nfunction App() {\n  const characterIds = characterList.map(char => char.id);\n  const randomCharacterIdIndex = Math.floor(Math.random() * characterIds.length);\n  const randomCharacterId = characterIds[randomCharacterIdIndex];\n  const [characterId, setCharacterId] = useState(randomCharacterId);\n  const [resource, setResource] = useState(fetchCharacterData(characterId));\n  const [\n    startTransition,\n    isPending\n  ] = useTransition({\n    timeoutMs: 1000\n  });\n  const getNextCharacter = () => {\n    startTransition(() => {\n      const newIds = characterIds.filter(id => id !== characterId);\n      const randomId = newIds[Math.floor(Math.random() * newIds.length)];\n      setCharacterId(randomId);\n      setResource(fetchCharacterData(randomId));\n    })\n  };\n\n  const buttonText = isPending ? 'LOADING CHARACTER...' : 'GET NEW CHARACTER';\n\n  return (\n    <div className=\"App\">\n      <BackToHome />\n      <h1>Random Star Wars Character</h1>\n      <Character\n        buttonText={buttonText}\n        getNextCharacter={getNextCharacter}\n        isPending={isPending}\n        resource={resource}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n  <ul>\n    <li>\n      <Link\n        to={`${process.env.PUBLIC_URL}/fetch-on-render`}\n      >\n        Fetch On Render Example\n      </Link>\n    </li>\n    <li>\n      <Link\n        to={`${process.env.PUBLIC_URL}/fetch-then-render`}\n      >\n        Fetch Then Render Example\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/suspense`}>\n        Suspense Example\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/suspense-list`}>\n        Suspense List Example\n      </Link>\n    </li>\n    <li>\n      <Link to={`${process.env.PUBLIC_URL}/use-transition`}>\n        useTransition Example\n      </Link>\n    </li>\n  </ul>\n)\n\n\nexport default Home;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport FetchOnRenderExample from './FetchOnRenderExample';\nimport FetchThenRenderExample from './FetchThenRenderExample';\nimport SuspenseExample from './SuspenseExample';\nimport SuspenseListExample from './SuspenseListExample';\nimport UseTransitionExample from './UseTransitonExample';\nimport Home from './Home';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='App-main'>\n      <h1 className='project-title'>Suspense API Demo</h1>\n      <Router>\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/fetch-on-render`}>\n            <FetchOnRenderExample />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/fetch-then-render`}>\n            <FetchThenRenderExample />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense`}>\n            <SuspenseExample />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/suspense-list`}>\n            <SuspenseListExample />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/use-transition`}>\n            <UseTransitionExample />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/`}>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.createRoot(\n  document.getElementById('root')\n).render(<App />);\n"],"sourceRoot":""}